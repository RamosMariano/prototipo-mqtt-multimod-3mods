name: E2E - MQTT flow (docker compose)

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  e2e:
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Show Docker & Compose versions
        run: |
          docker --version
          docker compose version || true

      - name: Prepare Mosquitto config
        run: |
          mkdir -p .ci/mosquitto
          cat > .ci/mosquitto/mosquitto.conf <<'EOF'
          listener 1883 0.0.0.0
          allow_anonymous true
          EOF

      - name: Create CI docker-compose file
        run: |
          cat > docker-compose.ci.yml <<'YAML'
          services:
            broker-mqtt:
              image: eclipse-mosquitto:2
              container_name: broker-mqtt
              ports:
                - "1883:1883"
              volumes:
                - ./.ci/mosquitto/mosquitto.conf:/mosquitto/config/mosquitto.conf:ro
              healthcheck:
                test: ["CMD", "mosquitto_sub", "-h", "localhost", "-t", "$$SYS/#", "-C", "1", "-W", "5"]
                interval: 5s
                timeout: 5s
                retries: 10

            consumer:
              build:
                context: ./consumer
              depends_on:
                broker-mqtt:
                  condition: service_healthy
              environment:
                - MQTT_HOST=broker-mqtt
                - MQTT_PORT=1883
              # agrega variables si tu app las necesita

            simulator:
              build:
                context: ./simulator
              depends_on:
                broker-mqtt:
                  condition: service_healthy
              environment:
                - MQTT_HOST=broker-mqtt
                - MQTT_PORT=1883
              # agrega variables si tu app las necesita
          YAML

      - name: Compose build
        run: docker compose -f docker-compose.ci.yml build

      - name: Compose up
        run: docker compose -f docker-compose.ci.yml up -d

      - name: Install mosquitto-clients (for assertions)
        run: |
          sudo apt-get update
          sudo apt-get install -y mosquitto-clients

      - name: Smoke publish (send a test message to a known topic)
        run: |
          mosquitto_pub -h 127.0.0.1 -p 1883 -t "test/topic" -m "hello-from-ci"

      - name: Wait for simulator/consumer logs
        run: |
          set -e
          echo "Waiting up to 90s to see activity in logs..."
          for i in $(seq 1 30); do
            docker compose -f docker-compose.ci.yml logs --no-color consumer simulator | tail -n 200 > logs.txt || true
            if grep -E "test/topic|connected|published|received" logs.txt >/dev/null 2>&1; then
              echo "✅ Activity detected in consumer/simulator logs"
              break
            fi
            sleep 3
          done

          if ! grep -E "test/topic|connected|published|received" logs.txt >/dev/null 2>&1; then
            echo "❌ No expected activity found in logs"
            echo "Recent logs:"
            cat logs.txt
            exit 1
          fi

      - name: Show container status
        if: always()
        run: docker compose -f docker-compose.ci.yml ps

      - name: Dump last logs (for debugging)
        if: failure()
        run: docker compose -f docker-compose.ci.yml logs --no-color

      - name: Compose down
        if: always()
        run: docker compose -f docker-compose.ci.yml down -v
