services:
  broker-mqtt:
    image: eclipse-mosquitto:2
    container_name: broker-mqtt
    restart: unless-stopped
    ports:
      - "1883:1883"
      - "9001:9001"
    volumes:
      - ./mosquitto/config:/mosquitto/config
      - ./mosquitto/data:/mosquitto/data
      - ./mosquitto/log:/mosquitto/log

  # MongoDB para almacenar lecturas de sensores
  mongodb:
    image: mongo:7
    container_name: mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"   # usa 127.0.0.1:27017:27017 si querés exponer sólo a localhost
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME:-iot}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD:-iotpass}
      - MONGO_INITDB_DATABASE=${MONGO_INITDB_DATABASE:-iotdb}
    volumes:
      - mongo-data:/data/db
    healthcheck:
      test: ["CMD-SHELL", "mongosh --quiet --eval 'db.adminCommand({ ping: 1 })' || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10

  # (Opcional) UI web para explorar MongoDB
  mongo-express:
    image: mongo-express:1.0.2
    container_name: mongo-express
    restart: unless-stopped
    depends_on:
      mongodb:
        condition: service_healthy
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongodb
      - ME_CONFIG_MONGODB_PORT=27017
      - ME_CONFIG_MONGODB_ENABLE_ADMIN=true
      - ME_CONFIG_BASICAUTH=false
      - ME_CONFIG_MONGODB_ADMINUSERNAME=${MONGO_INITDB_ROOT_USERNAME:-iot}
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGO_INITDB_ROOT_PASSWORD:-iotpass}

  consumer:
    build:
      context: .
      dockerfile: consumer/Dockerfile
    container_name: consumer
    restart: unless-stopped
    depends_on:
      broker-mqtt:
        condition: service_started
      mongodb:
        condition: service_healthy
    environment:
      # MQTT (lo que lee Env.fromEnv)
      - BROKER_HOST=broker-mqtt
      - BROKER_PORT=1883
      - TOPIC_OUTDOOR=sensors/outdoor/temperature
      - TOPIC_INDOOR=sensors/indoor/temperature
      - SETPOINT=21
      # Mongo (lo que usa MongoEnv/MongoService)
      - MONGO_URI=mongodb://${MONGO_INITDB_ROOT_USERNAME:-iot}:${MONGO_INITDB_ROOT_PASSWORD:-iotpass}@mongodb:27017/${MONGO_INITDB_DATABASE:-iotdb}?authSource=admin
      - MONGO_DB=${MONGO_INITDB_DATABASE:-iotdb}
      - MONGO_COLLECTION=${MONGO_COLLECTION:-readings}

  api-rest:
    build:
      context: .
      dockerfile: api/Dockerfile
    container_name: api-rest
    restart: unless-stopped
    ports:
      - "8080:8080"
    depends_on:
      mongodb:
        condition: service_healthy
    environment:
      - SPRING_DATA_MONGODB_URI=mongodb://${MONGO_INITDB_ROOT_USERNAME:-iot}:${MONGO_INITDB_ROOT_PASSWORD:-iotpass}@mongodb:27017/${MONGO_INITDB_DATABASE:-iotdb}?authSource=admin
      - SPRING_DATA_MONGODB_DATABASE=${MONGO_INITDB_DATABASE:-iotdb}

  # ========= Simuladores (dos rooms) =========

  simulator-room1:
    build:
      context: .
      dockerfile: simulator/Dockerfile
    container_name: simulator-room1
    restart: unless-stopped
    depends_on:
      broker-mqtt:
        condition: service_started
    environment:
      - CLIENT_ID=sim-room1
      - BROKER_HOST=broker-mqtt
      - BROKER_PORT=1883
      - SIM_ROOM_ID=room1
      - SIM_HTTP_PORT=8099
      # Intervalos (ajustá si querés)
      - SIM_PUBLISH_INTERVAL_MS=${SIM_PUBLISH_INTERVAL_MS:-300000}
      - SIM_STEP_MS=${SIM_STEP_MS:-1000}
      # Si querés forzar topics, descomenta y ajusta:
      # - TOPIC_R1_T=sensors/room1/temperature
      # - TOPIC_R1_H=sensors/room1/humidity
      # - TOPIC_SW1_S=switches/room1/state
      # - TOPIC_SW1_P=switches/room1/power
      # - TOPIC_SW1_E=switches/room1/energy
    ports:
      - "8099:8099"   # control HTTP de room1

  simulator-room2:
    build:
      context: .
      dockerfile: simulator/Dockerfile
    container_name: simulator-room2
    restart: unless-stopped
    depends_on:
      broker-mqtt:
        condition: service_started
    environment:
      - CLIENT_ID=sim-room2
      - BROKER_HOST=broker-mqtt
      - BROKER_PORT=1883
      - SIM_ROOM_ID=room2
      - SIM_HTTP_PORT=8099
      - SIM_PUBLISH_INTERVAL_MS=${SIM_PUBLISH_INTERVAL_MS:-300000}
      - SIM_STEP_MS=${SIM_STEP_MS:-1000}
      # - TOPIC_R1_T=sensors/room2/temperature
      # - TOPIC_R1_H=sensors/room2/humidity
      # - TOPIC_SW1_S=switches/room2/state
      # - TOPIC_SW1_P=switches/room2/power
      # - TOPIC_SW1_E=switches/room2/energy
    ports:
      - "8100:8099"   # control HTTP de room2

volumes:
  mongo-data:
